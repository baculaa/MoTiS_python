This README is intended to detail the contents of the local planner. This file is used within the MoTiS goals software and takes the robots from one place to another. Below is a description of the file and each of the functions it contains. 

FILE: local_plan.py
DESCRIPTION: Moves robot from current position to goal position, stopping when an object is detected in front of it. 
             Has two ROS subscribers that read odometry data and laser scan data. Has one ROS publisher that publishes linear and angular veolcity.
             Input required is the current goal as a Point() type.
  FUNCTIONS: 
             - newOdom(msg):
               FUNCTION: Callback function that gets the current odometry of the robot
                 INPUTS: odometry message
                OUTPUTS: current x,y,theta

             - newLaserScan(msg)
               FUNCTION: Callback function that gets the laser scan data in front of the robot
                 INPUTS: laser scan message
                OUTPUTS: dictionary of the closest object detected on the front right and left

             - move_to_goal_avoidance(curGoal)
               FUNCTION: Moves robot from current position to goal position while stopping if an obstacle enters its space
                 INPUTS: Current goal as a Point() type
                OUTPUTS: self.move Twist() type with modified linear and angular velocities

             - return_to_starting_pos()
               FUNCTION: returns robot to starting position if desired by user
                 INPUTS: terminal input y or n
                OUTPUTS: robot goes to its 0,0

             - stop()
               FUNCTION: stops the robot
                 INPUTS: none
                OUTPUTS: robot stops

             - correct_orientation(y):
               FUNCTION: rotate towards goal if not pointed at the goal, or at the goal
                 INPUTS: current goal y position
                OUTPUTS: robot rotation

             - final_formation_orientation(orientation):
               FUNCTION: Rotate to a final specified orientation
                 INPUTS: desired final orientation
                OUTPUTS: rotates robot until at desired final orientation
